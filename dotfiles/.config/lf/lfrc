# Resources
# https://github.com/gokcehan/lf/blob/master/etc/lfrc.example  
# https://github.com/ericmurphyxyz/dotfiles/blob/master/.config/lf/lfrc

# Basic Settings
set hidden true
set ignorecase true
set preview true
set previewer ~/.config/lf/preview
set icons true
set ifs "\n"


# -------------- Open functions --------

cmd open &{{
    case $(xdg-mime query filetype "$f") in
      text/*) lf -remote "send $id \$$EDITOR \"\$fx\"";;
      application/json) lf -remote "send $id \$$EDITOR \"\$fx\"";;
      application/x-shellscript) lf -remote "send $id \$$EDITOR \"\$fx\"";;
      application/x-zerosize) lf -remote "send $id \$$EDITOR \"\$fx\"";;
      application/javascript) lf -remote "send $id \$$EDITOR \"\$fx\"";;

      *) for f in "$fx"; do $OPENER "$f" > /dev/null 2> /dev/null & done;;
   esac
}}


cmd file_explorer ${{
  xdg-open . > /dev/null 2>&1 &
}}

cmd edit ${{
    if [ -d "$f" ] ; then
        codium "$f" > /dev/null 2>&1 &
    fi 

    case $(file --mime-type -Lb "$f") in
        text/*) codium "$f" > /dev/null 2>&1 &;;
    esac

    case "$f" in
        *.svg) org.inkscape.Inkscape "$f" > /dev/null 2>&1 &;;
        *.png|*.jpeg|*.jpg) org.gimp.GIMP "$f" > /dev/null 2>&1 &;;
    esac
}}


# ------------------- Basic functionaly -----------------
cmd mkdir ${{
  mkdir $1
}}

cmd touch ${{
  touch $1
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    file=${files%%;*}

    trash-put "$(basename "$file")"
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd restore_trash ${{
  trash-restore
}}


# -------------- lfcd --------------
# set pane_path when changing directory
cmd on-cd &{{
    printf "\e]7;$PWD\e\\" > /dev/tty
}}

# unset pane_path when quitting
cmd on-quit &{{
    printf "\e]7;\e\\" > /dev/tty
}}

# trigger on-cd upon startup
on-cd


# -------------- extended functionality --------------
cmd bulk-rename ${{
    old="$(mktemp)"
    new="$(mktemp)"
    if [ -n "$fs" ]; then
        fs="$(basename -a $fs)"
    else
        fs="$(ls)"
    fi
    printf '%s\n' "$fs" >"$old"
    printf '%s\n' "$fs" >"$new"
    $EDITOR "$new"
    [ "$(wc -l < "$new")" -ne "$(wc -l < "$old")" ] && exit
    paste "$old" "$new" | while IFS= read -r "names"; do
        src="$(printf '%s' "$names" | cut -f1)"
        dst="$(printf '%s' "$names" | cut -f2)"
        if [ "$src" = "$dst" ] || [ -e "$dst" ]; then
            continue
        fi
        mv -- "$src" "$dst"
    done
    rm -- "$old" "$new"
    lf -remote "send $id unselect"
}}

cmd mytest ${{
        fs_flat=$(echo "$fs" | sed "s/^/'/; s/$/'/")
        fs=$(basename -a "$fs_flat")
        echo $fs

}}



# -------------- Mapping --------------
# Custom
map o file_explorer
map <enter> shell
map e edit
map du restore_trash
map t mytest

# Basic Functions
map d
map . set hidden!
map dd cut
map dt trash
map R reload
map mf mkfile
map md mkdir

# Movement
map gh cd ~
map gd cd ~/Downloads
map ge cd /etc
map gu cd /usr
map go cd /opt
map gv cd /var
map gm cd /media
map gM cd /mnt
map gs cd /srv
map gp cd /tmp
map g/ cd /
