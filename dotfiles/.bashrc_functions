
# vim: filetype=bash:

# ----------- custom funcitons --------------------------

mkcd ()
{
    mkdir -p -- "$1" &&
       cd -P -- "$1"
}

mkmv ()
{
    mkdir -p -- "$2" &&
    mv "$1 $2/"
}


lfcd () { 
  cd "$(command lf -print-last-dir "$@")"
}

copyf (){
  if [[ $# == 0 ]]; then
    xargs -d '\n' realpath | sed 's/.*/file:\/\/&/' | xclip -i -selection clipboard -t text/uri-list
  else
    printf "%s\n" "${@}" | xargs -d '\n' realpath | sed 's/.*/file:\/\/&/' | xclip -i -selection clipboard -t text/uri-list
  fi
}


# ---------------------------------- fuzzy functions --------------------------------------

lff() {
    local selection

    selection=$(
        find ~/Documents ~/Apps/ ~/.mydotfiles \
          \( -name .git -o -name node_modules -o -name venv -o -name cache \) -prune -o -type d -print \
          | fzf -e --prompt 'Main> ' \
            --header 'C-h: home' \
            --bind 'ctrl-h:reload(find ~/ -type d)' \
            --height=20 --layout=reverse --info=inline --border --margin=1 --padding=1 \
    )

    if [ -n "$selection" ]; then
        cd "$selection"
        lf
    fi
}


cdf() {
    local selection

    selection=$(
        find ~/Documents ~/Apps/ ~/.mydotfiles \
          \( -name .git -o -name node_modules -o -name venv -o -name cache \) -prune -o -type d -print \
          | fzf -e --prompt 'Main> ' \
            --header 'C-h: home' \
            --bind 'ctrl-h:reload(find ~/ -type d)' \
            --height=20 --layout=reverse --info=inline --border --margin=1 --padding=1 \
    )

    if [ -n "$selection" ]; then
        cd "$selection"
    fi
}
